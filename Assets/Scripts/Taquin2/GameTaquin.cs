//------------------------------------------------------------------------------
// <auto-generated>
	//     This code was generated by a tool.
	//     Runtime Version:4.0.30319.34014
	//
	//     Changes to this file may cause incorrect behavior and will be lost if
	//     the code is regenerated.
	// </auto-generated>
	//------------------------------------------------------------------------------
using UnityEngine;
using System.Collections;
namespace AssemblyCSharp
{
	public class GameTaquin
	{
		private Tile[][] board{ get;};
		private int height;
		private int width;
		private Texture[] textures;
		public GameTaquin (int height, int width, Texture[] textures)
		{
			if (textures.GetLength != height * width) {
				Debug.Log ("Incorrect number of textures");
				return;
			}
			this.height = height;
			this.width = width;
			this.textures = textures;
			board = new Tile[height][width];
			init ();
								
		}
		
		private void init ()
		{
			int i, y, xRand, yRand;
			for (i=0; i<height; i++)
			for (y=0; y<width; y++) {
				board [i] [y] = null;
			}
			for (i=0; i<height*width; i++) {
				do {
					xRand = Random.Range (0, height-1);
					yRand = Random.Range (0, width-1);
				} while (board[xRand][yRand] != null);
				board [xRand] [yRand] = new Tile(textures [i],xRand,yRand);
			}
		}
				
		public bool moveTile(int xOrigin, int yOrigin, int xArrival, int yArrival){
			if (!board[xArrival][yArrival].isEmpty && !board[xOrigin][yOrigin].isEmpty){
				return false;
			}
			Tile tile=board [xOrigin][yOrigin];
			board[xOrigin][yOrigin]=board[xArrival][yArrival];
			board[xArrival][yArrival]=tile;
			return true;
		}
	}
}

